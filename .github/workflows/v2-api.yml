name: Gradely-V2 PHP GitHub Actions

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-node-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest
    
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        script: |
          echo "I just enter digitalocean"
          lsb_release -a
          ls -l
          php --version
          cd /home/chinaka/ftp/files/v2-api

#     - name: Copy file via scp
#       uses: appleboy/scp-action@master
#       env:
#         HOST: ${{ secrets.HOST }}
#         USERNAME: ${{ secrets.USERNAME }}
#         PORT: ${{ secrets.PORT }}
#         KEY: ${{ secrets.SSHKEY }}
#       with:
#         source: "."
#         target: "/opt/app"

    - name: Executing remote  command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        script: ls -l
        #script: cat /opt/app/README.md
    #- name: Save DigitalOcean kubeconfig
    #  run: doctl kubernetes cluster kubeconfig save testing-cluster
    
    #- name: Log in to DigitalOcean Container Registry with short-lived credentials
     # run: doctl registry login --expiry-seconds 600

#     - name: Get server update
#       run: |
#         echo "I just enter digitalocean"
#         lsb_release -a
#         ls -l
#         php --version
#         cd /home/chinaka/ftp/files/v2-api


    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
